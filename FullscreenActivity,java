/*
 * app实现的主文件，包含计算器实现的核心功能
 */
package com.example.mycalculator;

import com.example.mycalculator.util.SystemUiHider;

import android.annotation.TargetApi;
import android.app.Activity;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;

/**
 * An example full-screen activity that shows and hides the system UI (i.e.
 * status bar and navigation/system bar) with user interaction.
 *
 * @see SystemUiHider
 */
public class FullscreenActivity extends Activity {
	/**
	 * Whether or not the system UI should be auto-hidden after
	 * {@link #AUTO_HIDE_DELAY_MILLIS} milliseconds.
	 */
	
	//实现计算器功能的全局变量定义
	static Double num1;
	static Double num2;
	Double result;
	static Double now;
	int flag = 0,dot = 0,add = 0;
	char ch = '.';
	String str="";
	
		
	private static final boolean AUTO_HIDE = true;

	/**
	 * If {@link #AUTO_HIDE} is set, the number of milliseconds to wait after
	 * user interaction before hiding the system UI.
	 */
	private static final int AUTO_HIDE_DELAY_MILLIS = 3000;

	/**
	 * If set, will toggle the system UI visibility upon interaction. Otherwise,
	 * will show the system UI visibility upon interaction.
	 */
	private static final boolean TOGGLE_ON_CLICK = true;

	/**
	 * The flags to pass to {@link SystemUiHider#getInstance}.
	 */
	private static final int HIDER_FLAGS = SystemUiHider.FLAG_HIDE_NAVIGATION;

	/**
	 * The instance of the {@link SystemUiHider} for this activity.
	 */
	private SystemUiHider mSystemUiHider;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		setContentView(R.layout.activity_fullscreen);
		
		Log.i("FullscreenActivity", "onCreate");
		
		//变量初始化
		num1 = 0.0;
		num2 = 0.0;
		now = 0.0;
		result = 0.0;
		
		
		//实例化18个按钮
		Button b00 = (Button) findViewById(R.id.bt00);
		Button b01 = (Button) findViewById(R.id.bt01);
		Button b02 = (Button) findViewById(R.id.bt02);
		Button b03 = (Button) findViewById(R.id.bt03);
		Button b10 = (Button) findViewById(R.id.bt10);
		Button b11 = (Button) findViewById(R.id.bt11);
		Button b12 = (Button) findViewById(R.id.bt12);
		Button b13 = (Button) findViewById(R.id.bt13);
		Button b20 = (Button) findViewById(R.id.bt20);
		Button b21 = (Button) findViewById(R.id.bt21);
		Button b22 = (Button) findViewById(R.id.bt22);
		Button b23 = (Button) findViewById(R.id.bt23);
		Button b30 = (Button) findViewById(R.id.bt30);
		Button b31 = (Button) findViewById(R.id.bt31);
		Button b32 = (Button) findViewById(R.id.bt32);
		Button b40 = (Button) findViewById(R.id.bt40);
		Button b41 = (Button) findViewById(R.id.bt41);
		Button bend = (Button) findViewById(R.id.btend);
		
		//实例化TextView
		final TextView tv = (TextView) findViewById(R.id.tv1);
		
		//监听响应‘+’按钮
		b00.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				ch = '+';
				tv.setText("+");
				if(flag==0)
					flag = 1;
				else
					flag = 0;
				if(flag == 0)
					now = num1;
				else
					now = num2;
			}
		});	
		//监听响应‘-’按钮
		b01.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				ch = '-';
				tv.setText("-");
				if(flag==0)
					flag = 1;
				else
					flag = 0;
				if(flag == 0)
					now = num1;
				else
					now = num2;
			}
		});
		//监听响应‘*’按钮
		b02.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				ch = '*';
				tv.setText("*");
				if(flag==0)
					flag = 1;
				else
					flag = 0;
				if(flag == 0)
					now = num1;
				else
					now = num2;
			}
		});
		//监听响应‘/’按钮
		b03.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				ch = '/';
				tv.setText("/");
				if(flag==0)
					flag = 1;
				else
					flag = 0;
				if(flag == 0)
					now = num1;
				else
					now = num2;
			}
		});
		//监听响应‘7’按钮
		b10.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				//tv.setText("get 7!");
				add = 7;
				if(dot == 0){
					if(flag == 0) {
						num1 = num1*10 + 7;
						now = num1;
					}
					else {
						num2 = num2*10 + 7;
						now = num2;
					}
					tv.setText((now.toString().substring(0,(now.toString().length()-2))));
				}
				else {
					if(flag == 0) {
						num1 +=  7*Math.pow(0.1,dot);
						now = num1;
					}
					else {
						num2 +=  7*Math.pow(0.1,dot);
						now = num1;
					}
					dot++;
					str = now.toString();
					tv.setText(str);
				}				
			}
		});
		//监听响应‘8’按钮
		b11.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				//tv.setText("get 8!");
				add = 8;
				if(dot == 0){
					if(flag == 0) {
						num1 = num1*10 + add;
						now = num1;
					}
					else {
						num2 = num2*10 + add;
						now = num2;
					}
					tv.setText((now.toString().substring(0,(now.toString().length()-2))));
				}
				else {
					if(flag == 0) {
						num1 +=  add*Math.pow(0.1,dot);
						now = num1;
					}
					else {
						num2 +=  add*Math.pow(0.1,dot);
						now = num1;
					}
					dot++;
					str = now.toString();
					tv.setText(str);
				}	
				
			}
		});
		//监听响应‘9’按钮
		b12.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				//tv.setText("get 9!");
				add = 9;
				if(dot == 0){
					if(flag == 0) {
						num1 = num1*10 + 9;
						now = num1;
					}
					else {
						num2 = num2*10 + 9;
						now = num2;
					}
					tv.setText((now.toString().substring(0,(now.toString().length()-2))));
				}
				else {
					if(flag == 0) {
						num1 +=  9*Math.pow(0.1,dot);
						now = num1;
					}
					else {
						num2 +=  9*Math.pow(0.1,dot);
						now = num1;
					}
					dot++;
					str = now.toString();
					tv.setText(str);
				}			
			}
		});
		//监听响应‘Clear’按钮
		b13.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				//tv.setText("get Clear!");
				if(flag == 0)
					num1=0.0;
				else
					num2=0.0;
				dot = 0;
				now=0.0;
				tv.setText("");
			}
		});
		//监听响应‘4’按钮
		b20.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				//tv.setText("get 4!");
				add = 4;
				if(dot == 0){
					if(flag == 0) {
						num1 = num1*10 + 4;
						now = num1;
					}
					else {
						num2 = num2*10 + 4;
						now = num2;
					}
					str = now.toString().substring(0,(now.toString().length()-2));
					tv.setText(str);
				}
				else {
					if(flag == 0) {
						num1 +=  4*Math.pow(0.1,dot);
						now = num1;
					}
					else {
						num2 +=  4*Math.pow(0.1,dot);
						now = num1;
					}
					dot++;
					str = now.toString();
					tv.setText(str);
				}			
			}
		});
		//监听响应‘5’按钮
		b21.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				//tv.setText("get 5!");
				add = 5;
				if(dot == 0){
					if(flag == 0) {
						num1 = num1*10 + 5;
						now = num1;
					}
					else {
						num2 = num2*10 + 5;
						now = num2;
					}
					str = now.toString().substring(0,(now.toString().length()-2));
					tv.setText(str);
				}
				else {
					if(flag == 0) {
						num1 +=  5*Math.pow(0.1,dot);
						now = num1;
					}
					else {
						num2 +=  5*Math.pow(0.1,dot);
						now = num1;
					}
					dot++;
					str = now.toString();
					tv.setText(str);
				}			
			}
		});
		//监听响应‘6’按钮
		b22.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				//tv.setText("get 6!");
				add = 6;
				if(dot == 0){
					if(flag == 0) {
						num1 = num1*10 + 6;
						now = num1;
					}
					else {
						num2 = num2*10 + 6;
						now = num2;
					}
					str = (now.toString().substring(0,(now.toString().length()-2)));
					tv.setText(str);
				}
				else {
					if(flag == 0) {
						num1 +=  6*Math.pow(0.1,dot);
						now = num1;
					}
					else {
						num2 +=  6*Math.pow(0.1,dot);
						now = num1;
					}
					dot++;
					str = now.toString();
					tv.setText(str);
				}			
			}
		});
		//监听响应‘Delete’按钮
		b23.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				//tv.setText("get Delete!");
				if(str.length()>0)
					str=str.substring(0,(str.length()-1));
				if(dot == 0)
					now = (now.intValue()-add)/10 + 0.0;
				else
				{
					dot--;
					now = now-add*Math.pow(0.1,dot);
					dot--;
				}
				if(flag == 0)
					num1 = now;
				else
					num2 = now;
				tv.setText(str);
			}
		});
		//监听响应‘1’按钮
		b30.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				//tv.setText("get 1!");
				if(dot == 0){
					if(flag == 0) {
						num1 = num1*10 + 1;
						now = num1;
					}
					else {
						num2 = num2*10 + 1;
						now = num2;
					}
					tv.setText((now.toString().substring(0,(now.toString().length()-2))));
				}
				else {
					if(flag == 0) {
						num1 +=  1*Math.pow(0.1,dot);
						now = num1;
					}
					else {
						num2 +=  1*Math.pow(0.1,dot);
						now = num1;
					}
					dot++;
					tv.setText(now.toString());
				}			
			}
		});
		//监听响应‘2’按钮
		b31.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				//tv.setText("get 2!");
				if(dot == 0){
					if(flag == 0) {
						num1 = num1*10 + 2;
						now = num1;
					}
					else {
						num2 = num2*10 + 2;
						now = num2;
					}
					tv.setText((now.toString().substring(0,(now.toString().length()-2))));
				}
				else {
					if(flag == 0) {
						num1 +=  2*Math.pow(0.1,dot);
						now = num1;
					}
					else {
						num2 +=  2*Math.pow(0.1,dot);
						now = num1;
					}
					dot++;
					tv.setText(now.toString());
				}			
			}
		});
		//监听响应‘3’按钮
		b32.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				//tv.setText("get 3!");
				if(dot == 0){
					if(flag == 0) {
						num1 = num1*10 + 3;
						now = num1;
					}
					else {
						num2 = num2*10 + 3;
						now = num2;
					}
					tv.setText((now.toString().substring(0,(now.toString().length()-2))));
				}
				else {
					if(flag == 0) {
						num1 +=  3*Math.pow(0.1,dot);
						now = num1;
					}
					else {
						num2 +=  3*Math.pow(0.1,dot);
						now = num1;
					}
					dot++;
					tv.setText(now.toString());
				}			
			}
		});
		//监听响应‘0’按钮
		b40.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				//tv.setText("get 0!");
				if(dot == 0){
					if(flag == 0) {
						num1 = num1*10 + 0;
						now = num1;
					}
					else {
						num2 = num2*10 + 0;
						now = num2;
					}
					tv.setText((now.toString().substring(0,(now.toString().length()-2))));
				}
				else {
					if(flag == 0) {
						num1 +=  0*Math.pow(0.1,dot);
						now = num1;
					}
					else {
						num2 +=  0*Math.pow(0.1,dot);
						now = num1;
					}
					dot++;
					tv.setText(now.toString());
				}			
			}
		});
		//监听响应‘.’按钮
		b41.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				//tv.setText("get .!");
				dot = 1;
				tv.setText((now.toString().substring(0,(now.toString().length()-1))));
			}
		});
		//监听响应‘=’按钮
		bend.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				//tv.setText("get =!");
				//借助已经写好的计算方法，计算出 num1 ch num2 的结果
				result = Calculate.calculate(num1, num2, ch);
				str = result.toString();
				tv.setText(str);
				flag = 0;
				num2 = 0.0;
				dot = 0;
				num1 = result;
			}
		});
		
		//eclipse自动生成的代码
		final View controlsView = findViewById(R.id.fullscreen_content_controls);
		final View contentView = findViewById(R.id.fullscreen_content);

		// Set up an instance of SystemUiHider to control the system UI for
		// this activity.
		mSystemUiHider = SystemUiHider.getInstance(this, contentView, HIDER_FLAGS);
		mSystemUiHider.setup();
		mSystemUiHider.setOnVisibilityChangeListener(new SystemUiHider.OnVisibilityChangeListener() {
			// Cached values.
			int mControlsHeight;
			int mShortAnimTime;

			@Override
			@TargetApi(Build.VERSION_CODES.HONEYCOMB_MR2)
			public void onVisibilityChange(boolean visible) {
				if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB_MR2) {
					// If the ViewPropertyAnimator API is available
					// (Honeycomb MR2 and later), use it to animate the
					// in-layout UI controls at the bottom of the
					// screen.
					if (mControlsHeight == 0) {
						mControlsHeight = controlsView.getHeight();
					}
					if (mShortAnimTime == 0) {
						mShortAnimTime = getResources().getInteger(android.R.integer.config_shortAnimTime);
					}
					controlsView.animate().translationY(visible ? 0 : mControlsHeight).setDuration(mShortAnimTime);
				} else {
					// If the ViewPropertyAnimator APIs aren't
					// available, simply show or hide the in-layout UI
					// controls.
					controlsView.setVisibility(visible ? View.VISIBLE : View.GONE);
				}

				if (visible && AUTO_HIDE) {
					// Schedule a hide().
					delayedHide(AUTO_HIDE_DELAY_MILLIS);
				}
			}
		});

		// Set up the user interaction to manually show or hide the system UI.
		contentView.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View view) {
				if (TOGGLE_ON_CLICK) {
					mSystemUiHider.toggle();
				} else {
					mSystemUiHider.show();
				}
			}
		});

		// Upon interacting with UI controls, delay any scheduled hide()
		// operations to prevent the jarring behavior of controls going away
		// while interacting with the UI.
		findViewById(R.id.dummy_button).setOnTouchListener(mDelayHideTouchListener);
	}

	@Override
	protected void onPostCreate(Bundle savedInstanceState) {
		super.onPostCreate(savedInstanceState);

		// Trigger the initial hide() shortly after the activity has been
		// created, to briefly hint to the user that UI controls
		// are available.
		
		//将隐藏时间最大化，达到取消隐藏的效果
		delayedHide(Integer.MAX_VALUE);
	}

	/**
	 * Touch listener to use for in-layout UI controls to delay hiding the
	 * system UI. This is to prevent the jarring behavior of controls going away
	 * while interacting with activity UI.
	 */
	View.OnTouchListener mDelayHideTouchListener = new View.OnTouchListener() {
		@Override
		public boolean onTouch(View view, MotionEvent motionEvent) {
			if (AUTO_HIDE) {
				delayedHide(AUTO_HIDE_DELAY_MILLIS);
			}
			return false;
		}
	};

	Handler mHideHandler = new Handler();
	Runnable mHideRunnable = new Runnable() {
		@Override
		public void run() {
			mSystemUiHider.hide();
		}
	};

	/**
	 * Schedules a call to hide() in [delay] milliseconds, canceling any
	 * previously scheduled calls.
	 */
	private void delayedHide(int delayMillis) {
		mHideHandler.removeCallbacks(mHideRunnable);
		mHideHandler.postDelayed(mHideRunnable, delayMillis);
	}
}
